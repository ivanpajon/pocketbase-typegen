// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createRecordType creates type definition for a record 1`] = `
"export type BooksRecord = {
	title?: string
}"
`;

exports[`createRecordType handles file fields with multiple files 1`] = `
"export type BooksRecord = {
	avatars?: string[]
}"
`;

exports[`createResponseType creates type definition for a response 1`] = `"export type BooksResponse<Texpand = unknown> = Required<BooksRecord> & BaseSystemFields<Texpand>"`;

exports[`createResponseType handles file fields with multiple files 1`] = `
"export type BooksRecord = {
	avatars?: string[]
}"
`;

exports[`generate generates correct output given db input 1`] = `
"/**
* This file was @generated using pocketbase-typegen
*/

import type PocketBase from 'pocketbase'
import type { RecordService } from 'pocketbase'

export enum Collections {
	Books = "books",
}

// Alias types for improved usability
export type IsoDateString = string
export type RecordIdString = string
export type HTMLString = string

// System fields
export type BaseSystemFields<T = never> = {
	id: RecordIdString
	collectionId: string
	collectionName: Collections
	expand?: T
}

export type BaseSystemCreateFields = {
	id?: RecordIdString
}

export type BaseSystemUpdateFields = never

export type AuthSystemFields<T = never> = {
	email: string
	emailVisibility: boolean
	username: string
	verified: boolean
} & BaseSystemFields<T>

export type AuthSystemCreateFields = {
	id?: RecordIdString
	email: string
	emailVisibility?: boolean
	password: string
	passwordConfirm: string
	verified?: boolean
}

export type AuthSystemUpdateFields = {
	email?: string
	emailVisibility?: boolean
	oldPassword?: string
	password?: string
	passwordConfirm?: string
	verified?: boolean
}

// Record types for each collection

export type BooksRecord = {
	title?: string
}

// Create types for each collection

export type BooksCreate = {
	title?: string
} & BaseSystemCreateFields

// Update types for each collection

export type BooksUpdate = {
	title?: string
} & BaseSystemUpdateFields

// Response types include system fields and match responses from the PocketBase API
export type BooksResponse<Texpand = unknown> = Required<BooksRecord> & BaseSystemFields<Texpand>

// Types containing all Records and Responses, useful for creating typing helper functions

export type CollectionRecords = {
	books: BooksRecord
}

export type CollectionCreates = {
	books: BooksCreate
}

export type CollectionUpdates = {
	books: BooksUpdate
}

export type CollectionResponses = {
	books: BooksResponse
}

// Type for usage with type asserted PocketBase instance
// https://github.com/pocketbase/js-sdk#specify-typescript-definitions

export type TypedPocketBase = PocketBase & {
	collection(idOrName: 'books'): RecordService<BooksResponse>
}
"
`;
